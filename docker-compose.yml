version: '3.9'
networks:
  internal:
    driver: bridge
    ipam:
      config:
        - subnet: 172.16.8.0/20
  vault-backend:

volumes:
  cicdtoolbox_db_data: null
  cicdtoolbox_db_conf: null
  mongo_data: null
  gitea:
    driver: local
  jenkins_certs: null
  jenkins_data: null
  jenkins_conf: null
  ldap_data: null
  nexus-work: null
  nexus-data: null
  freeipa: null
  portainer_data: null
  sonarqube_data: null
  sonarqube_extensions: null
  sonarqube_logs: null
  sonarqube_temp: null
  vault: null
  promtail: null
  netbox: null
  redis: null
  consul-config:
  consul-data:
  vault-config:
  vault-policies:
  vault-data:
  vault-logs:

secrets:
  ca_crt:
    file: ./ca.crt
  argos_key:
    file: ./vault/certs/argos.services.provider.test.pem
  argos_crt:
    file: ./vault/certs/argos.services.provider.test.crt
  argos-service_key:
    file: ./vault/certs/argos-service.tooling.provider.test.pem
  argos-service_crt:
    file: ./vault/certs/argos-service.tooling.provider.test.crt
  build-dev_key:
    file: ./vault/certs/build-dev.delivery.provider.test.pem
  build-dev_crt:
    file: ./vault/certs/build-dev.delivery.provider.test.crt
  build-test_key:
    file: ./vault/certs/build-test.delivery.provider.test.pem
  build-test_crt:
    file: ./vault/certs/build-test.delivery.provider.test.crt
  build-acc_key:
    file: ./vault/certs/build-acc.delivery.provider.test.pem
  build-acc_crt:
    file: ./vault/certs/build-acc.delivery.provider.test.crt
  build-prod_key:
    file: ./vault/certs/build-prod.delivery.provider.test.pem
  build-prod_crt:
    file: ./vault/certs/build-prod.delivery.provider.test.crt
  cicdtoolbox-db_key:
    file: ./freeipa/certs/cicdtoolbox-db.internal.provider.test.key
  cicdtoolbox-db_crt:
    file: ./freeipa/certs/cicdtoolbox-db.internal.provider.test.pem
  gitea_key:
    file: ./vault/certs/gitea.tooling.provider.test.pem
  gitea_crt:
    file: ./vault/certs/gitea.tooling.provider.test.crt
  grafana_key:
    file: ./vault/certs/grafana.monitoring.provider.test.pem
  grafana_crt:
    file: ./vault/certs/grafana.monitoring..provider.test.crt

  jenkins_key:
    file: ./freeipa/certs/jenkins.tooling.provider.test.key
  jenkins_crt:
    file: ./freeipa/certs/jenkins.tooling.provider.test.pem
  dev_jenkins_secret:
    file: ./jenkins_buildnode/Dev_secret.txt
  test_jenkins_secret:
    file: ./jenkins_buildnode/Test_secret.txt
  acc_jenkins_secret:
    file: ./jenkins_buildnode/Acc_secret.txt
  prod_jenkins_secret:
    file: ./jenkins_buildnode/Prod_secret.txt
  keycloak_key:
    file: ./freeipa/certs/keycloak.services.provider.test.key
  keycloak_crt:
    file: ./freeipa/certs/keycloak.services.provider.test.pem

  ldap_key:
    file: ./vault/certs/ldap.internal.provider.test..pem
  ldap_crt:
    file: ./vault/certs/ldap.internal.provider.test.crt
  loki_key:
    file: ./vault/certs/loki.monitoring.provider.test.pem
  loki_crt:
    file: ./vault/certs/loki.monitoring.provider.test.crt
  mongodb_key:
    file: ./vault/certs/mongodb.internal.provider.test.pem
  mongodb_crt:
    file: ./vault/certs/mongodb.internal.provider.test.crt
  netbox_key:
    file: ./vault/certs/netbox.tooling.provider.test.pem
  netbox_crt:
    file: ./vault/certs/netbox.tooling.provider.test.crt

  nexus_key:
    file: ./freeipa/certs/nexus.tooling.provider.test.pem
  nexus_crt:
    file: ./freeipa/certs/nexus.tooling.provider.test.crt

  promtail_key:
    file: ./vault/certs/promtail.monitoring.provider.test.pem
  promtail_crt:
    file: ./vault/certs/promtail.monitoring.provider.test.crt
  redis_key:
    file: ./vault/certs/redis.internal.provider.test.pem
  redis_crt:
    file: ./vault/certs/redis.internal.provider.test.crt
  restportal_key:
    file: ./vault/certs/restportal.services.provider.test.pem
  restportal_crt:
    file: ./vault/certs/restportal.services.provider.test.crt

services:

  ldap.iam.provider.test:
    container_name: ldap.iam.provider.test
    build: lldap
    restart: unless-stopped
    hostname: ldap
    volumes:
      - 'ldap_data:/data'
    expose:
      - '3890:3890'
    environment:
#      - LLDAP_JWT_SECRET=REPLACE_WITH_RANDOM
      - LLDAP_LDAP_USER_PASS=Pa55w0rd
      - LLDAP_LDAP_BASE_DN=dc=provider,dc=test  
    networks:
      internal:
        ipv4_address: 172.16.8.11
    healthcheck:
      test: 'curl --insecure --head --fail -s https://localhost || exit 1'
      interval: 1m30s
      timeout: 10s
      retries: 3

  freeipa.iam.provider.test:
    container_name: freeipa.iam.provider.test
    build: freeipa
    restart: unless-stopped
    hostname: freeipa
    domainname: provider.test
    volumes:
      - '/sys/fs/cgroup:/sys/fs/cgroup:ro'
      - 'freeipa:/data:Z'
    expose:
      - '80'
      - '443'
      - '389'
      - '636'
      - '88'
      - '464'
      - 88/udp
      - 464/udp
      - 123/udp
    environment:
      - IPA_SERVER_HOSTNAME=freeipa.iam.provider.test
      - >-
        IPA_SERVER_INSTALL_OPTS=-d -r provider.test --ntp-pool=pool.ntp.org --domain=provider.test --reverse-zone=16.172.in-addr.arpa -p Pa55w0rd -a Pa55w0rd --no-host-dns --setup-dns --no-forwarders --ip-address 172.16.8.12
        --pki-config-override=/etc/pki/pki.conf -U
      - IPA_SERVER_IP=172.16.8.12
      - VIRTUAL_PROTO=http
      - VIRTUAL_HOST=freeipa.iam.provider.test
      - VIRTUAL_PORT=80
    dns:
      - 127.0.0.1
    sysctls:
      - net.ipv6.conf.all.disable_ipv6=0
    networks:
      internal:
        ipv4_address: 172.16.8.12
    healthcheck:
      test: 'curl --insecure --head --fail -s https://localhost || exit 1'
      interval: 1m30s
      timeout: 10s
      retries: 3

  cicdtoolbox-db.internal.provider.test:
    container_name: cicdtoolbox-db.internal.provider.test
    build: cicdtoolbox-db
    command: |
      -c ssl=on  -c ssl_cert_file=/var/lib/postgresql/server.crt -c ssl_key_file=/var/lib/postgresql/server.key
    restart: unless-stopped
    init: true
    stop_signal: SIGINT
    stop_grace_period: 15s
    environment:
      - 'POSTGRES_MULTIPLE_DATABASES=gitea,keycloak,sonar,terraform,grafana,netbox'
      - POSTGRES_USER=netcicd
      - POSTGRES_PASSWORD=netcicd
    secrets:
      - source: cicdtoolbox-db_key
        target: /var/lib/postgresql/server1.key
        uid: '999'
        gid: '999'
        mode: 600
      - source: cicdtoolbox-db_crt
        target: /var/lib/postgresql/server.crt
        uid: '999'
        gid: '999'
        mode: 644
      - source: ca_crt
        target: /var/lib/postgresql/root.crt
        uid: '999'
        gid: '999'
        mode: 600
    networks:
      internal:
        ipv4_address: 172.16.9.2
    expose:
      - '5432'
    volumes:
      - 'cicdtoolbox_db_data:/var/lib/postgresql/data'
      - 'cicdtoolbox_db_conf:/etc/postgresql'
      - './cicdtoolbox-db/docker-entrypoint-initdb-resources:/docker-entrypoint-initdb-resources:ro'

  mongodb.internal.provider.test:
    container_name: mongodb.internal.provider.test
    image: 'argosnotary/mongo:4.2.8'
    restart: unless-stopped
    init: true
    stop_signal: SIGINT
    stop_grace_period: 15s
    networks:
      internal:
        ipv4_address: 172.16.9.3
    expose:
      - '27017'

  consul.internal.provider.test:
    container_name: consul.internal.provider.test
    build:
      context: ./vault
      dockerfile: docker/Dockerfile-consul
    restart: unless-stopped
    init: true
    stop_signal: SIGINT
    stop_grace_period: 15s
    networks:
      internal:
        ipv4_address: 172.16.9.4
    volumes:
      - consul-data:/consul/data

  vault.internal.provider.test:
    container_name: vault.internal.provider.test
    build:
      context: ./vault
      dockerfile: docker/Dockerfile-vault
    restart: unless-stopped
    init: true
    stop_signal: SIGINT
    stop_grace_period: 15s
    networks:
      internal:
        ipv4_address: 172.16.9.5
    expose:
      - '8200'
    volumes:
      - vault-config:/vault/config
      - vault-policies:/vault/policies
      - vault-data:/vault/data
      - vault-logs:/vault/logs
    environment:
      - VAULT_ADDR=http://vault.internal.provider.test:8200
      - VAULT_API_ADDR=http://vault.internal.provider.test:8200
    cap_add:
      - IPC_LOCK
    depends_on:
      - consul.internal.provider.test

  restportal.services.provider.test:
    container_name: restportal.services.provider.test
    build: restportal
    restart: unless-stopped
    init: true
    stop_signal: SIGINT
    stop_grace_period: 15s
    networks:
      internal:
        ipv4_address: 172.16.10.2
    ports:
      - '8888:8080'
    healthcheck:
      test: 'curl --insecure --head --fail -s https://localhost:8080 || exit 1'
      interval: 1m30s
      timeout: 10s
      retries: 3

  argos.services.provider.test:
    container_name: argos.services.provider.test
    image: 'argosnotary/argos-frontend:1.0.2'
    environment:
      - 'BACKEND_URL=http://argos-service.tooling.provider.test:8080'
    networks:
      internal:
        ipv4_address: 172.16.10.4
    ports:
      - '8082:80'
    depends_on:
      - argos-service.tooling.provider.test

  keycloak.services.provider.test:
    container_name: keycloak.services.provider.test
    build: keycloak
    restart: unless-stopped
    init: true
    stop_signal: SIGINT
    stop_grace_period: 15s
    environment:
      DB_VENDOR: POSTGRES
      DB_ADDR: cicdtoolbox-db.internal.provider.test
      DB_DATABASE: keycloak
      DB_USER: keycloak
      DB_SCHEMA: public
      DB_PASSWORD: keycloak
      KEYCLOAK_USER: local-admin
      KEYCLOAK_PASSWORD: Pa55w0rd
      JDBC_PARAMS: ssl=true&sslmode=verify-ca&sslrootcert=/etc/pki/ca-trust/source/anchors/ca.crt
    secrets:
      - source: keycloak_key
        target: /etc/x509/https/tls.key
      - source: keycloak_crt
        target: /etc/x509/https/tls.crt
    networks:
      internal:
        ipv4_address: 172.16.10.11
    ports:
      - '8080:8080'
      - '8443:8443'
    depends_on:
      - cicdtoolbox-db.internal.provider.test
    healthcheck:
      test: 'curl --insecure --head --fail -s https://localhost:8443 || exit 1'
      interval: 1m30s
      timeout: 10s
      retries: 3

  gitea.tooling.provider.test:
    container_name: gitea.tooling.provider.test
    build: gitea
    restart: unless-stopped
    init: true
    stop_signal: SIGINT
    stop_grace_period: 15s
    environment:
      - USER_UID=1000
      - USER_GID=1000
      - GITEA__server__DOMAIN=gitea.tooling.provider.test
      - GITEA__database__USER=gitea
      - GITEA__database__PASSWD=gitea
    secrets:
      - source: ca_crt
        target: /usr/local/share/ca-certificates/CICD-toolbox-ca.crt
      # - source: gitea_key
      #   target: /data/gitea/gitea.tooling.provider.test.key
    networks:
      internal:
        ipv4_address: 172.16.11.3
    volumes:
      - 'gitea:/data'
      - '/etc/timezone:/etc/timezone:ro'
      - '/etc/localtime:/etc/localtime:ro'
    expose:
      - '3000'
    depends_on:
      - cicdtoolbox-db.internal.provider.test
      - keycloak.services.provider.test
    healthcheck:
      test: 'curl --insecure --head --fail -s https://localhost:3000/ || exit 1'
      interval: 1m30s
      timeout: 10s
      retries: 3

  argos-service.tooling.provider.test:
    container_name: argos-service.tooling.provider.test
    build: ./argos-service
    environment:
      spring.config.location: /application.yml
      jwt.token.secret: Z2LcVpgCuGtpb5rBDNIIWGe8RXqYGWDpWFjWhYQUS2Z8rjE2/GTJlu0s6BRYG0Mn0kV8StC9cFE83Jkl68RCkw==
      spring.profiles.active: integration-test
      JAVA_OPTS: '-Xmx1g'
    networks:
      internal:
        ipv4_address: 172.16.11.4
    expose:
      - '8080'
    depends_on:
      - mongodb.internal.provider.test
      - keycloak.services.provider.test
    volumes:
      - './argos/application.yml:/application.yml'

  jenkins.tooling.provider.test:
    container_name: jenkins.tooling.provider.test
    build: ./jenkins
    restart: unless-stopped
    privileged: true
    user: root
    networks:
      internal:
        ipv4_address: 172.16.11.8
    environment:
      - JENKINS_ADMIN_ID=local-admin
      - JENKINS_ADMIN_PASSWORD=netcicd
      - NETCICD_PASSWORD=netcicd
      - CML_USER=developer
      - CML_PASSWORD=C1sco12345
      - 'CML_URL=https://10.10.20.161'
      - GITEA_IP=172.16.11.3
      - JENKINS_IP=172.16.11.8
      - NEXUS_IP=172.16.11.9
      - JENKINS_NEXUS_PASSWORD=netcicd
      - JENKINS_ARGOS_PASSWORD=netcicd
    secrets:
      - source: jenkins_key
        target: /var/jenkins_home/jenkins.tooling.provider.test.key

      - source: jenkins_crt
        target: /var/jenkins_home/jenkins.tooling.provider.test.pem
    volumes:
      - 'jenkins_certs:/certs/client'
      - 'jenkins_data:/var/jenkins_home'
      - 'jenkins_conf:/var/jenkins_conf'
    ports:
      - '8084:8084'
      - '50000:50000'
    depends_on:
      - keycloak.services.provider.test
    healthcheck:
      test: 'curl --insecure --head --fail -s https://localhost:8084/whoAmI || exit 1'
      interval: 1m30s
      timeout: 10s
      retries: 3

  nexus.tooling.provider.test:
    container_name: nexus.tooling.provider.test
    build: nexus
    restart: unless-stopped
    init: true
    stop_signal: SIGINT
    stop_grace_period: 15s
    user: nexus
    environment:
      BASE_URL: 'https://nexus.tooling.provider.test:8443'
      NEXUS_SECURITY_RANDOMPASSWORD: 'true'
      NEXUS_CASC_CONFIG: /opt/nexus.yaml
    secrets:
      - source: ca_crt
        target: /nexus-data/etc/ssl/ca.crt
    volumes:
      - 'nexus-work:/sonatype-work'
      - 'nexus-data:/nexus-data'
    ulimits:
      nofile:
        soft: 65536
        hard: 65536
    networks:
      internal:
        ipv4_address: 172.16.11.9
    ports:
      - '8081:8081'
    depends_on:
      - keycloak.services.provider.test
    healthcheck:
      test: 'curl --insecure --head --fail -s https://localhost:8443 || exit 1'
      interval: 1m30s
      timeout: 10s
      retries: 3

  build-dev.delivery.provider.test:
    container_name: build-dev.delivery.provider.test
    build:
      context: ./jenkins_buildnode
      dockerfile: Dockerfile
    restart: unless-stopped
    init: true
    stop_signal: SIGINT
    stop_grace_period: 15s
    cap_add:
      - NET_ADMIN
      - NET_RAW
    environment:
      BUILD_ENVIRONMENT: 'Dev'
    secrets:
      - source: dev_jenkins_secret
        target: /home/jenkins/secret-file.txt
        mode: 444
    expose:
      - '50000'
    networks:
      internal:
        ipv4_address: 172.16.12.2

  build-test.delivery.provider.test:
    container_name: build-test.delivery.provider.test
    build:
      context: ./jenkins_buildnode
      dockerfile: Dockerfile
    restart: unless-stopped
    init: true
    stop_signal: SIGINT
    stop_grace_period: 15s
    cap_add:
      - NET_ADMIN
      - NET_RAW
    environment:
      BUILD_ENVIRONMENT: 'Test'
    secrets:
      - source: test_jenkins_secret
        target: /home/jenkins/secret-file.txt
        mode: 444
    expose:
      - '50000'
    networks:
      internal:
        ipv4_address: 172.16.12.3

  build-acc.delivery.provider.test:
    container_name: build-acc.delivery.provider.test
    build:
      context: ./jenkins_buildnode
      dockerfile: Dockerfile
    restart: unless-stopped
    init: true
    stop_signal: SIGINT
    stop_grace_period: 15s
    cap_add:
      - NET_ADMIN
      - NET_RAW
    environment:
      BUILD_ENVIRONMENT: 'Acc'
    secrets:
      - source: acc_jenkins_secret
        target: /home/jenkins/secret-file.txt
        mode: 444
    expose:
      - '50000'
    networks:
      internal:
        ipv4_address: 172.16.12.4

  build-prod.delivery.provider.test:
    container_name: build-prod.delivery.provider.test
    build:
      context: ./jenkins_buildnode
      dockerfile: Dockerfile
    restart: unless-stopped
    init: true
    stop_signal: SIGINT
    stop_grace_period: 15s
    cap_add:
      - NET_ADMIN
      - NET_RAW
    environment:
      BUILD_ENVIRONMENT: 'Prod'
    secrets:
      - source: prod_jenkins_secret
        target: /home/jenkins/secret-file.txt
        mode: 444
    expose:
      - '50000'
    networks:
      internal:
        ipv4_address: 172.16.12.5

  portainer.monitoring.provider.test:
    container_name: portainer.monitoring.provider.test
    image: portainer/portainer-ce
    restart: unless-stopped
    init: true
    stop_signal: SIGINT
    stop_grace_period: 15s
    volumes:
      - 'portainer_data:/data'
      - '/var/run/docker.sock:/var/run/docker.sock'
    networks:
      internal:
        ipv4_address: 172.16.13.3
    ports:
      - '9000:9000'
    healthcheck:
      test: 'curl --insecure --head --fail -s http://localhost || exit 1'
      interval: 1m30s
      timeout: 10s
      retries: 3

  loki.monitoring.provider.test:
    container_name: loki.monitoring.provider.test
    build: loki
    restart: unless-stopped
    init: true
    stop_signal: SIGINT
    stop_grace_period: 15s
    expose:
      - '3100'
    command: '-config.file=/etc/loki/local-config.yaml'
    networks:
      internal:
        ipv4_address: 172.16.13.4

  promtail.monitoring.provider.test:
    container_name: promtail.monitoring.provider.test
    build: promtail
    restart: unless-stopped
    init: true
    stop_signal: SIGINT
    stop_grace_period: 15s
    volumes:
      - promtail:/var/log
    command: '-config.file=/etc/promtail/config.yml'
    networks:
      internal:
        ipv4_address: 172.16.13.5

  grafana.monitoring.provider.test:
    container_name: grafana.monitoring.provider.test
    build: grafana
    restart: unless-stopped
    init: true
    stop_signal: SIGINT
    stop_grace_period: 15s
    environment:
      - GF_AUTH_GENERIC_OAUTH_CLIENT_SECRET=$Grafana_CLIENT_SECRET
    expose:
      - '3000'
    networks:
      internal:
        ipv4_address: 172.16.13.6

  redis.internal.provider.test:
    container_name: redis.tooling.provider.test
    image: redis:6.2-alpine
    ports:
      - 6379:6379
    command: redis-server --save 60 1 --requirepass netbox --loglevel warning
    restart: unless-stopped
    volumes:
      - redis:/data
    networks:
      internal:
        ipv4_address: 172.16.11.11  

  netbox.tooling.provider.test:
    container_name: netbox.tooling.provider.test
    image: lscr.io/linuxserver/netbox:latest
    environment:
      - PUID=1000
      - PGID=1000
      - TZ=Europe/Amsterdam
      - SUPERUSER_EMAIL=netcicd@provider.test
      - SUPERUSER_PASSWORD=Pa55w0rd
      - ALLOWED_HOST=netbox.tooling.provider.test
      - DB_NAME=netbox
      - DB_USER=netbox
      - DB_PASSWORD=netbox
      - DB_HOST=cicdtoolbox-db.internal.provider.test
      - DB_PORT=5432
      - REDIS_HOST=redis.internal.provider.test
      - REDIS_PORT=6379
      - REDIS_PASSWORD=netbox

      # - REMOTE_AUTH_ENABLED=<REMOTE_AUTH_ENABLED> #optional
      # - REMOTE_AUTH_BACKEND=<REMOTE_AUTH_BACKEND> #optional
      # - REMOTE_AUTH_HEADER=<REMOTE_AUTH_HEADER> #optional
      # - REMOTE_AUTH_AUTO_CREATE_USER=<REMOTE_AUTH_AUTO_CREATE_USER> #optional
      # - REMOTE_AUTH_DEFAULT_GROUPS=<REMOTE_AUTH_DEFAULT_GROUPS> #optional
      # - REMOTE_AUTH_DEFAULT_PERMISSIONS=<REMOTE_AUTH_DEFAULT_PERMISSIONS> #optional
    volumes:
      - netbox:/config
    ports:
      - 8000:8000
    restart: unless-stopped
    networks:
      internal:
        ipv4_address: 172.16.11.12