---
core:
  baseUrl: ${BASE_URL:""}
  httpProxy: ${HTTP_PROXY:""}
  httpsProxy: ${HTTPS_PROXY:""}
  # TODO: allow to have a list here...
  nonProxyHosts: ${NO_PROXY:""}
capabilities:
  - type: OutreachManagementCapability
    enabled: false
security:
  anonymousAccess: true
  pruneUsers: true
  realms:
    - name: "org.github.flytreeleft.nexus3.keycloak.plugin.KeycloakAuthenticatingRealm"
      enabled: true
    - name: "DockerToken"
      enabled: true
    - name: "NpmToken"
      enabled: true
    - name: "NuGetApiKey"
      enabled: true
  privileges:
    - id: system-repository-admin-docker-docker-proxy-update
      enabled: true
      name: system-repository-admin-docker-docker-proxy-update
      description: Permit update to docker-proxy repository configuration
      type: repository-admin
      properties:
        format: docker
        repository: docker-proxy
        actions: read,update
  roles:
    - id: ClientRole:nexus-admin
      enabled: true
      source: default
      name: ClientRole:nexus-admin
      description: "ClientRole: The admin role for Nexus"
      privileges:
        - nx-all
    - id: "ClientRole:nexus-docker-pull"
      enabled: true
      source: default
      name: "ClientRole:nexus-docker-pull"
      description: "ClientRole: The role to be used in order to pull from the Docker mirror on Nexus"
      privileges:
        - nx-healthcheck-read
        - nx-repository-view-docker-docker-browse
        - nx-repository-view-docker-docker-proxy-browse
        - nx-repository-view-docker-docker-proxy-read
        - nx-repository-view-docker-docker-read
        - nx-search-read
    - id: "ClientRole:nexus-docker-push"
      enabled: true
      source: default
      name: "ClientRole:nexus-docker-push"
      description: "ClientRole: The role to be used in order to push to the Docker mirror on Nexus"
      privileges:
        - nx-healthcheck-read
        - nx-repository-view-docker-docker-*
        - nx-repository-view-docker-docker-proxy-*
        - nx-search-read
    - id: Keycloak-nexus-netcicd-agent
      enabled: true
      source: default
      name: Keycloak-nexus-netcicd-agent
      description: "The role to be used for a Jenkins agent to push data to Nexus"
      privileges:
        - nx-repository-admin-raw-NetCICD-hosted-*
    - id: repository-read-docker
      enabled: true
      source: default
      name: repository-read-docker
      description: "Docker Anonymous Access for public proxy / group repositories"
      privileges:
        - nx-healthcheck-read
        - nx-repository-view-docker-docker-browse
        - nx-repository-view-docker-docker-proxy-browse
        - nx-repository-view-docker-docker-proxy-read
        - nx-repository-view-docker-docker-read
        - nx-search-read
    - id: ClientRole:nexus-apk-read
      enabled: true
      source: default
      name: ClientRole:nexus-apk-read
      description: "APK Anonymous Access for public proxy / group repositories"
      privileges:
        - nx-healthcheck-read
        - nx-repository-view-apk-apk-main-proxy-read
        - nx-repository-view-apk-apk-community-proxy-read
        - nx-repository-view-apk-apk-testing-proxy-read
        - nx-search-read
    - id: repository-read-all
      enabled: true
      source: default
      name: repository-read-all
      description: "Read All permission for repositories"
      privileges:
        - nx-apikey-all
        - nx-healthcheck-read
        - nx-repository-view-*-*-browse
        - nx-repository-view-*-*-read
        - nx-search-read
    - id: repository-write-all
      enabled: true
      source: default
      name: repository-write-all
      description: "Write All permission for repositories"
      privileges:
        - nx-apikey-all
        - nx-healthcheck-read
        - nx-repository-view-*-*-*
        - nx-search-read
  users:
    - username: anonymous
      firstName: Anonymous
      lastName: User
      password: anonymous
      updateExistingPassword: false
      email: anonymous@example.org
      roles:
        - source: "default"
          role: repository-read-docker
          role: ClientRole:nexus-apk-read
repository:
  pruneBlobStores: true
  blobStores:
    - name: apk
      type: File
      attributes:
        file:
          path: apk
        blobStoreQuotaConfig:
          quotaLimitBytes: 10240000000
          quotaType: spaceUsedQuota
    - name: NetCICD
      type: File
      attributes:
        file:
          path: NetCICD
        blobStoreQuotaConfig:
          quotaLimitBytes: 10240000000
          quotaType: spaceUsedQuota
    - name: docker
      type: File
      attributes:
        file:
          path: docker
        blobStoreQuotaConfig:
          quotaLimitBytes: 10240000000
          quotaType: spaceUsedQuota
    - name: golang
      type: File
      attributes:
        file:
          path: golang
        blobStoreQuotaConfig:
          quotaLimitBytes: 10240000000
          quotaType: spaceUsedQuota
    - name: maven
      type: File
      attributes:
        file:
          path: maven
        blobStoreQuotaConfig:
          quotaLimitBytes: 10240000000
          quotaType: spaceUsedQuota
    - name: npm
      type: File
      attributes:
        file:
          path: npm
        blobStoreQuotaConfig:
          quotaLimitBytes: 10240000000
          quotaType: spaceUsedQuota
    - name: nuget
      type: File
      attributes:
        file:
          path: nuget
        blobStoreQuotaConfig:
          quotaLimitBytes: 10240000000
          quotaType: spaceUsedQuota
    - name: rubygems
      type: File
      attributes:
        file:
          path: rubygems
        blobStoreQuotaConfig:
          quotaLimitBytes: 10240000000
          quotaType: spaceUsedQuota
    - name: pypi
      type: File
      attributes:
        file:
          path: pypi
        blobStoreQuotaConfig:
          quotaLimitBytes: 10240000000
          quotaType: spaceUsedQuota
  pruneCleanupPolicies: true
  cleanupPolicies:
    - name: cleanup-everything
      format: ALL_FORMATS
      notes: ''
      criteria:
        lastDownloaded: 864000
    - name: cleanup-apk-proxy
      format: apk
      notes: ''
      criteria:
        lastDownloaded: 864000
    - name: cleanup-docker-proxy
      format: docker
      notes: ''
      criteria:
        lastDownloaded: 864000
    - name: cleanup-golang-proxy
      format: go
      notes: ''
      criteria:
        lastDownloaded: 864000
    - name: cleanup-maven-proxy
      format: maven2
      notes: ''
      criteria:
        lastDownloaded: 864000
    - name: cleanup-npm-proxy
      format: npm
      notes: ''
      criteria:
        lastDownloaded: 864000
    - name: cleanup-nuget-proxy
      format: nuget
      notes: ''
      criteria:
        lastDownloaded: 864000
    - name: cleanup-rubygems-proxy
      format: rubygems
      notes: ''
      criteria:
        lastDownloaded: 864000
    - name: cleanup-pypi-proxy
      format: pypi
      notes: ''
      criteria:
        lastDownloaded: 864000
  pruneRepositories: true
  repositories:
    # https://help.sonatype.com/repomanager3/formats/docker-registry
    - name: NetCICD-hosted
      online: true
      recipeName: raw-hosted
      attributes:
        raw:
          forceBasicAuth: true  # Do not permit anonymous access to this repository
          v1Enabled: true
        storage:
          blobStoreName: NetCICD
          strictContentTypeValidation: true
          writePolicy: ALLOW_ONCE
        cleanup:
          policyName:
            - None
    - name: docker-hosted
      online: true
      recipeName: docker-hosted
      attributes:
        docker:
          forceBasicAuth: true  # Do not permit anonymous access to this repository
          v1Enabled: true
          #httpPort: 8082   # Uncomment to activate
          #httpsPort: 8083  # Requires Nexus Jetty be configured to use SSL Certificates
        storage:
          blobStoreName: docker
          strictContentTypeValidation: true
          writePolicy: ALLOW
        cleanup:
          policyName:
            - None
    - name: docker-proxy
      online: true
      recipeName: docker-proxy
      attributes:
        docker:
          forceBasicAuth: false  # Allow anonymous access
          v1Enabled: true
        proxy:
          remoteUrl: https://registry-1.docker.io
          contentMaxAge: -1.0
          metadataMaxAge: 1440.0
        dockerProxy:
          indexType: HUB
          cacheForeignLayers: true
          foreignLayerUrlWhitelist:
            - '.*'
        httpclient:
          blocked: false
          autoBlock: true
          connection:
            useTrustStore: false
        storage:
          blobStoreName: docker
          strictContentTypeValidation: true
        routingRules:
          routingRuleId: null
        negativeCache:
          enabled: true
          timeToLive: 1440.0
        cleanup:
          policyName:
            - cleanup-docker-proxy
    - name: docker
      online: true
      recipeName: docker-group
      attributes:
        docker:
          forceBasicAuth: false  # Each repo uses its own setting
          v1Enabled: true
        storage:
          blobStoreName: docker
          strictContentTypeValidation: true
        group:
          memberNames:
            - "docker-hosted"
            - "docker-proxy"
    # https://help.sonatype.com/repomanager3/formats/go-repositories
    # GOPROXY should point to the _group_ repository URL
    # golang requires anonymous access for this to work
    - name: golang-gonexus-proxy
      online: true
      recipeName: go-proxy
      attributes:
        golang:
          forceBasicAuth: false  # Allow anonymous access
          v1Enabled: true
        proxy:
          remoteUrl: https://gonexus.dev
          contentMaxAge: -1.0
          metadataMaxAge: 1440.0
        httpclient:
          blocked: false
          autoBlock: true
          connection:
            useTrustStore: false
        storage:
          blobStoreName: golang
          strictContentTypeValidation: true
        routingRules:
          routingRuleId: null
        negativeCache:
          enabled: true
          timeToLive: 1440.0
        cleanup:
          policyName:
            - cleanup-golang-proxy
    - name: golang-group
      online: true
      recipeName: go-group
      attributes:
        golang:
          forceBasicAuth: false  # Each repo uses its own setting
          v1Enabled: true
        storage:
          blobStoreName: golang
          strictContentTypeValidation: true
        group:
          memberNames:
            - "golang-gonexus-proxy"
    # https://help.sonatype.com/repomanager3/formats/maven-repositories
    - name: maven-snapshots
      online: true
      recipeName: maven2-hosted
      attributes:
        maven:
          versionPolicy: SNAPSHOT
          layoutPolicy: STRICT
        storage:
          writePolicy: ALLOW
          strictContentTypeValidation: true
          blobStoreName: maven
    - name: maven-releases
      online: true
      recipeName: maven2-hosted
      attributes:
        maven:
          versionPolicy: RELEASE
          layoutPolicy: STRICT
        storage:
          writePolicy: ALLOW_ONCE
          strictContentTypeValidation: true
          blobStoreName: maven
    - name: maven-central
      online: true
      recipeName: maven2-proxy
      attributes:
        proxy:
          contentMaxAge: -1
          remoteUrl: https://repo1.maven.org/maven2/
          metadataMaxAge: 1440
        negativeCache:
          timeToLive: 1440
          enabled: true
        storage:
          strictContentTypeValidation: false
          blobStoreName: maven
        httpclient:
          connection:
            blocked: false
            autoBlock: true
        maven:
          versionPolicy: RELEASE
          layoutPolicy: PERMISSIVE
        cleanup:
          policyName:
            - cleanup-maven-proxy
    - name: maven
      online: true
      recipeName: maven2-group
      attributes:
        maven:
          versionPolicy: MIXED
        group:
          memberNames:
            - "maven-snapshots"
            - "maven-releases"
            - "maven-central"
        storage:
          blobStoreName: maven
    # https://help.sonatype.com/repomanager3/formats/npm-registry
    - name: npm-hosted
      online: true
      recipeName: npm-hosted
      attributes:
        storage:
          blobStoreName: npm
          strictContentTypeValidation: true
          writePolicy: ALLOW_ONCE
        cleanup:
          policyName:
            - None
    - name: npm-proxy
      online: true
      recipeName: npm-proxy
      attributes:
        proxy:
          remoteUrl: https://registry.npmjs.org
          contentMaxAge: -1.0
          metadataMaxAge: 1440.0
        httpclient:
          blocked: false
          autoBlock: true
          connection:
            useTrustStore: false
        storage:
          blobStoreName: npm
          strictContentTypeValidation: true
        routingRules:
          routingRuleId: null
        negativeCache:
          enabled: true
          timeToLive: 1440.0
        cleanup:
          policyName:
            - cleanup-npm-proxy
    - name: npm
      online: true
      recipeName: npm-group
      attributes:
        storage:
          blobStoreName: npm
          strictContentTypeValidation: true
        group:
          memberNames:
            - "npm-proxy"
            - "npm-hosted"
    # NuGet Support: https://help.sonatype.com/repomanager3/formats/nuget-repositories
    # v3 URLs must be used if v3 proxy is present
    - name: nuget-proxy
      online: true
      recipeName: nuget-proxy
      attributes:
        proxy:
          remoteUrl: https://api.nuget.org/v3/index.json
          contentMaxAge: -1.0
          metadataMaxAge: 1440.0
        httpclient:
          blocked: false
          autoBlock: true
          connection:
            useTrustStore: false
        storage:
          blobStoreName: nuget
          strictContentTypeValidation: true
        negativeCache:
          enabled: true
          timeToLive: 1440.0
        cleanup:
          policyName:
            - cleanup-nuget-proxy
    - name: nuget-hosted
      online: true
      recipeName: nuget-hosted
      attributes:
        storage:
          blobStoreName: nuget
          strictContentTypeValidation: true
          writePolicy: ALLOW_ONCE
    - name: nuget
      online: true
      recipeName: nuget-group
      attributes:
        storage:
          blobStoreName: nuget
          strictContentTypeValidation: true
        group:
          memberNames:
            - "nuget-hosted"
            - "nuget-proxy"
    # https://help.sonatype.com/repomanager3/formats/pypi-repositories
    - name: apk-main-proxy
      online: true
      recipeName: apk-proxy
      attributes:
        proxy:
          remoteUrl: http://dl-cdn.alpinelinux.org/alpine/v3.12/main
          contentMaxAge: -1.0
          metadataMaxAge: 1440.0
        httpclient:
          blocked: false
          autoBlock: true
          connection:
            useTrustStore: false
        storage:
          blobStoreName: apk
          strictContentTypeValidation: true
        negativeCache:
          enabled: true
          timeToLive: 1440.0
        cleanup:
          policyName:
            - cleanup-apk-proxy
    - name: apk-community-proxy
      online: true
      recipeName: apk-proxy
      attributes:
        proxy:
          remoteUrl: http://dl-cdn.alpinelinux.org/alpine/v3.12/community
          contentMaxAge: -1.0
          metadataMaxAge: 1440.0
        httpclient:
          blocked: false
          autoBlock: true
          connection:
            useTrustStore: false
        storage:
          blobStoreName: apk
          strictContentTypeValidation: true
        negativeCache:
          enabled: true
          timeToLive: 1440.0
        cleanup:
          policyName:
            - cleanup-apk-proxy
    - name: apk-testing-proxy
      online: true
      recipeName: apk-proxy
      attributes:
        proxy:
          remoteUrl: http://dl-cdn.alpinelinux.org/alpine/edge/testing
          contentMaxAge: -1.0
          metadataMaxAge: 1440.0
        httpclient:
          blocked: false
          autoBlock: true
          connection:
            useTrustStore: false
        storage:
          blobStoreName: apk
          strictContentTypeValidation: true
        negativeCache:
          enabled: true
          timeToLive: 1440.0
        cleanup:
          policyName:
            - cleanup-apk-proxy
    - name: pypi-proxy
      online: true
      recipeName: pypi-proxy
      attributes:
        proxy:
          remoteUrl: https://pypi.org/
          contentMaxAge: -1.0
          metadataMaxAge: 1440.0
        httpclient:
          blocked: false
          autoBlock: true
          connection:
            useTrustStore: false
        storage:
          blobStoreName: pypi
          strictContentTypeValidation: true
        negativeCache:
          enabled: true
          timeToLive: 1440.0
        cleanup:
          policyName:
            - cleanup-pypi-proxy
    - name: pypi-hosted
      online: true
      recipeName: pypi-hosted
      attributes:
        storage:
          blobStoreName: pypi
          strictContentTypeValidation: true
          writePolicy: ALLOW_ONCE
    - name: pypi-group
      online: true
      recipeName: pypi-group
      attributes:
        storage:
          blobStoreName: pypi
          strictContentTypeValidation: true
        group:
          memberNames:
            - "pypi-hosted"
            - "pypi-proxy"
    # https://help.sonatype.com/repomanager3/formats/rubygems-repositories
    - name: rubygems-proxy
      online: true
      recipeName: rubygems-proxy
      attributes:
        proxy:
          remoteUrl: https://rubygems.org/
          contentMaxAge: -1.0
          metadataMaxAge: 1440.0
        httpclient:
          blocked: false
          autoBlock: true
          connection:
            useTrustStore: false
        storage:
          blobStoreName: rubygems
          strictContentTypeValidation: true
        negativeCache:
          enabled: true
          timeToLive: 1440.0
        cleanup:
          policyName:
            - cleanup-rubygems-proxy
    - name: rubygems-hosted
      online: true
      recipeName: rubygems-hosted
      attributes:
        storage:
          blobStoreName: rubygems
          strictContentTypeValidation: true
          writePolicy: ALLOW_ONCE
    - name: rubygems-group
      online: true
      recipeName: rubygems-group
      attributes:
        storage:
          blobStoreName: rubygems
          strictContentTypeValidation: true
        group:
          memberNames:
            - "rubygems-hosted"
            - "rubygems-proxy"
