---
core:
  baseUrl: ${BASE_URL:""}
  httpProxy: ${HTTP_PROXY:""}
  httpsProxy: ${HTTPS_PROXY:""}
  # TODO: allow to have a list here...
  nonProxyHosts: ${NO_PROXY:""}
capabilities:
  - type: OutreachManagementCapability
    enabled: false
security:
  anonymousAccess: true
  pruneUsers: true
  realms:
    - name: "org.github.flytreeleft.nexus3.keycloak.plugin.KeycloakAuthenticatingRealm"
      enabled: true
    - name: "DockerToken"
      enabled: true
    - name: "NpmToken"
      enabled: true
    - name: "NuGetApiKey"
      enabled: true
  privileges:
    - id: system-repository-admin-docker-docker-proxy-update
      enabled: true
      name: system-repository-admin-docker-docker-proxy-update
      description: Permit update to docker-proxy repository configuration
      type: repository-admin
      properties:
        format: docker
        repository: docker-proxy
        actions: read,update
  roles:
    - id: ClientRole:nexus-admin
      enabled: true
      source: default
      name: ClientRole:nexus-admin
      description: "ClientRole: The admin role for Nexus"
      privileges:
        - nx-all
    - id: ClientRole:nexus-read
      enabled: true
      source: default
      name: ClientRole:nexus-read
      description: "The role to be used to read data on Nexus"
      privileges:
        - nx-repository-view-*-*-read
        - nx-repository-view-*-*-browse
    - id: "ClientRole:nexus-docker-pull"
      enabled: true
      source: default
      name: "ClientRole:nexus-docker-pull"
      description: "ClientRole: The role to be used in order to pull from the Docker mirror on Nexus"
      privileges:
        - nx-healthcheck-read
        - nx-repository-view-docker-docker-browse
        - nx-repository-view-docker-docker-proxy-browse
        - nx-repository-view-docker-docker-proxy-read
        - nx-repository-view-docker-docker-read
        - nx-search-read
    - id: "ClientRole:nexus-docker-push"
      enabled: true
      source: default
      name: "ClientRole:nexus-docker-push"
      description: "ClientRole: The role to be used in order to push to the Docker mirror on Nexus"
      privileges:
        - nx-healthcheck-read
        - nx-repository-view-docker-docker-*
        - nx-repository-view-docker-docker-proxy-*
        - nx-search-read
    - id: "ClientRole:nexus-netcicd-agent"
      enabled: true
      source: default
      name: "ClientRole:nexus-netcicd-agent"
      description: "The role to be used for a Jenkins agent to push data to Nexus"
      privileges:
        - nx-repository-admin-raw-NetCICD_reports-*
    - id: repository-read-docker
      enabled: true
      source: default
      name: repository-read-docker
      description: "Docker Anonymous Access for public proxy / group repositories"
      privileges:
        - nx-healthcheck-read
        - nx-repository-view-docker-docker-browse
        - nx-repository-view-docker-docker-proxy-browse
        - nx-repository-view-docker-docker-proxy-read
        - nx-repository-view-docker-docker-read
        - nx-search-read
    - id: repository-read-all
      enabled: true
      source: default
      name: repository-read-all
      description: "Read All permission for repositories"
      privileges:
        - nx-apikey-all
        - nx-healthcheck-read
        - nx-repository-view-*-*-browse
        - nx-repository-view-*-*-read
        - nx-search-read
    - id: repository-write-all
      enabled: true
      source: default
      name: repository-write-all
      description: "Write All permission for repositories"
      privileges:
        - nx-apikey-all
        - nx-healthcheck-read
        - nx-repository-view-*-*-*
        - nx-search-read
  users:
    - username: anonymous
      firstName: Anonymous
      lastName: User
      password: anonymous
      updateExistingPassword: false
      email: anonymous@example.org
      roles:
        - source: "default"
          role: repository-read-docker
repository:
  pruneBlobStores: true
  blobStores:
    - name: NetCICD
      type: File
      attributes:
        file:
          path: NetCICD
        blobStoreQuotaConfig:
          quotaLimitBytes: 10240000000
          quotaType: spaceUsedQuota
    - name: docker
      type: File
      attributes:
        file:
          path: docker
        blobStoreQuotaConfig:
          quotaLimitBytes: 10240000000
          quotaType: spaceUsedQuota
    - name: apt
      type: File
      attributes:
        file:
          path: apt
        blobStoreQuotaConfig:
          quotaLimitBytes: 10240000000
          quotaType: spaceUsedQuota
    - name: maven
      type: File
      attributes:
        file:
          path: maven
        blobStoreQuotaConfig:
          quotaLimitBytes: 10240000000
          quotaType: spaceUsedQuota
    - name: pypi
      type: File
      attributes:
        file:
          path: pypi
        blobStoreQuotaConfig:
          quotaLimitBytes: 10240000000
          quotaType: spaceUsedQuota
  pruneCleanupPolicies: true
  cleanupPolicies:
    - name: cleanup-everything
      format: ALL_FORMATS
      notes: ''
      criteria:
        lastDownloaded: 864000
    - name: cleanup-apk-proxy
      format: apk
      notes: ''
      criteria:
        lastDownloaded: 864000
    - name: cleanup-apt-proxy
      format: apt
      notes: ''
      criteria:
        lastDownloaded: 864000
    - name: cleanup-docker-proxy
      format: docker
      notes: ''
      criteria:
        lastDownloaded: 864000
    - name: cleanup-maven-proxy
      format: maven2
      notes: ''
      criteria:
        lastDownloaded: 864000
    - name: cleanup-pypi-proxy
      format: pypi
      notes: ''
      criteria:
        lastDownloaded: 864000
  pruneRepositories: true
  repositories:
    - name: NetCICD_reports
      online: true
      recipeName: raw-hosted
      attributes:
        raw:
          forceBasicAuth: true  # Do not permit anonymous access to this repository
          v1Enabled: true
        storage:
          blobStoreName: NetCICD
          strictContentTypeValidation: true
          writePolicy: ALLOW_ONCE
        cleanup:
          policyName:
            - None
    - name: docker-hosted
      online: true
      recipeName: docker-hosted
      attributes:
        docker:
          forceBasicAuth: true  # Do not permit anonymous access to this repository
          v1Enabled: true
          #httpPort: 8082   # Uncomment to activate
          #httpsPort: 8083  # Requires Nexus Jetty be configured to use SSL Certificates
        storage:
          blobStoreName: docker
          strictContentTypeValidation: true
          writePolicy: ALLOW
        cleanup:
          policyName:
            - None
    - name: docker-proxy
      online: true
      recipeName: docker-proxy
      attributes:
        docker:
          forceBasicAuth: false  # Allow anonymous access
          v1Enabled: true
        proxy:
          remoteUrl: https://registry-1.docker.io
          contentMaxAge: -1.0
          metadataMaxAge: 1440.0
        dockerProxy:
          indexType: HUB
          cacheForeignLayers: true
          foreignLayerUrlWhitelist:
            - '.*'
        httpclient:
          blocked: false
          autoBlock: true
          connection:
            useTrustStore: false
        storage:
          blobStoreName: docker
          strictContentTypeValidation: true
        routingRules:
          routingRuleId: null
        negativeCache:
          enabled: true
          timeToLive: 1440.0
        cleanup:
          policyName:
            - cleanup-docker-proxy
    - name: docker
      online: true
      recipeName: docker-group
      attributes:
        docker:
          forceBasicAuth: false  # Each repo uses its own setting
          v1Enabled: true
        storage:
          blobStoreName: docker
          strictContentTypeValidation: true
        group:
          memberNames:
            - "docker-hosted"
            - "docker-proxy"
    # https://help.sonatype.com/repomanager3/formats/maven-repositories
    - name: maven-snapshots
      online: true
      recipeName: maven2-hosted
      attributes:
        maven:
          versionPolicy: SNAPSHOT
          layoutPolicy: STRICT
        storage:
          writePolicy: ALLOW
          strictContentTypeValidation: true
          blobStoreName: maven
    - name: maven-releases
      online: true
      recipeName: maven2-hosted
      attributes:
        maven:
          versionPolicy: RELEASE
          layoutPolicy: STRICT
        storage:
          writePolicy: ALLOW_ONCE
          strictContentTypeValidation: true
          blobStoreName: maven
    - name: maven-central
      online: true
      recipeName: maven2-proxy
      attributes:
        proxy:
          contentMaxAge: -1
          remoteUrl: https://repo1.maven.org/maven2/
          metadataMaxAge: 1440
        negativeCache:
          timeToLive: 1440
          enabled: true
        storage:
          strictContentTypeValidation: false
          blobStoreName: maven
        httpclient:
          connection:
            blocked: false
            autoBlock: true
        maven:
          versionPolicy: RELEASE
          layoutPolicy: PERMISSIVE
        cleanup:
          policyName:
            - cleanup-maven-proxy
    - name: maven
      online: true
      recipeName: maven2-group
      attributes:
        maven:
          versionPolicy: MIXED
        group:
          memberNames:
            - "maven-snapshots"
            - "maven-releases"
            - "maven-central"
        storage:
          blobStoreName: maven
    - name: pypi-proxy
      online: true
      recipeName: pypi-proxy
      attributes:
        proxy:
          remoteUrl: https://pypi.org/
          contentMaxAge: -1.0
          metadataMaxAge: 1440.0
        httpclient:
          blocked: false
          autoBlock: true
          connection:
            useTrustStore: false
        storage:
          blobStoreName: pypi
          strictContentTypeValidation: true
        negativeCache:
          enabled: true
          timeToLive: 1440.0
        cleanup:
          policyName:
            - cleanup-pypi-proxy
    - name: pypi-hosted
      online: true
      recipeName: pypi-hosted
      attributes:
        storage:
          blobStoreName: pypi
          strictContentTypeValidation: true
          writePolicy: ALLOW_ONCE
    - name: pypi-group
      online: true
      recipeName: pypi-group
      attributes:
        storage:
          blobStoreName: pypi
          strictContentTypeValidation: true
        group:
          memberNames:
            - "pypi-hosted"
            - "pypi-proxy"
    # https://help.sonatype.com/repomanager3/formats/rubygems-repositories
    - name: docker-all
      online: true
      recipeName: docker-group
      attributes:
        docker:
          forceBasicAuth: false  # Each repo uses its own setting
          httpPort: 8181
          httpsPort: 8182
        storage:
          blobStoreName: docker
          strictContentTypeValidation: true
        group:
          memberNames:
            - "docker-hosted"
            - "docker-proxy"
