APP_NAME = Our single source of truth
RUN_USER = git
RUN_MODE = prod

[server]
PROTOCOL         = https
HTTP_PORT        = 3000
ROOT_URL         = %(PROTOCOL)s://%(DOMAIN)s:%(HTTP_PORT)s/
DISABLE_SSH      = true
START_SSH_SERVER = false
OFFLINE_MODE     = false
APP_DATA_PATH    = /data/gitea
CERT_FILE        = gitea.tooling.provider.test.pem
KEY_FILE         = gitea.tooling.provider.test.key


[database]
DB_TYPE     = postgres
HOST        = cicdtoolbox-db.internal.provider.test
NAME        = gitea
SCHEMA      =
SSL_MODE    = verify-full
LOG_SQL     = false     ; in prod should be true, logging outside the container
 
[security]
INSTALL_LOCK   = true
;SECRET_KEY     = z5sRR3DQ4ZxJ5EcFSM8amg9eEfyLffxssDcO14bs2JlZRLwPl3E3PQ24xDMGB56j
;INTERNAL_TOKEN = eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJuYmYiOjE2MDQ2MDA1Nzh9.EBlRSglAohiqnxk1eM1NaKbCCzRyLuPL8D9yyyacef4
LOGIN_REMEMBER_DAYS = 1

[log]
MODE                 = console
LEVEL                = Trace
ROUTER               = console
ENABLE_ACCESS_LOG    = false
;; Set the log "modes" for the access log (if file is set the log file will default to access.log)
ACCESS               = console
;; Sets the template used to create the access log.
ACCESS_LOG_TEMPLATE  = {{.Ctx.RemoteAddr}} - {{.Identity}} {{.Start.Format "[02/Jan/2006:15:04:05 -0700]" }} "{{.Ctx.Req.Method}} {{.Ctx.Req.URL.RequestURI}} {{.Ctx.Req.Proto}}" {{.ResponseWriter.Status}} {{.ResponseWriter.Size}} "{{.Ctx.Req.Referer}}\" \"{{.Ctx.Req.UserAgent}}"
COLORIZE             = true
ROOT_PATH            = /data/gitea/log

[service]
;; Disallow registration, only allow admins to create accounts.
DISABLE_REGISTRATION              = false ; new users get an account automagically
;; Allow registration only using third-party services, it works only when DISABLE_REGISTRATION is false
ALLOW_ONLY_EXTERNAL_REGISTRATION  = true  ; users can only register through Keycloak
REQUIRE_SIGNIN_VIEW               = true  ; User must sign in to view anything.
;; Each new user will get the value of this setting copied into their profile
DEFAULT_KEEP_EMAIL_PRIVATE        = false
DEFAULT_ALLOW_CREATE_ORGANIZATION = false
;; Default value for IsRestricted
;; Every new user will have restricted permissions depending on this setting
DEFAULT_USER_IS_RESTRICTED        = true
;; Either "public", "limited" or "private", default is "public"
;; Limited is for users visible only to signed users
;; Private is for users visible only to members of their organizations
;; Public is for users visible for everyone
DEFAULT_USER_VISIBILITY           = private
;; Either "public", "limited" or "private", default is "public"
;; Limited is for organizations visible only to signed users
;; Private is for organizations visible only to members of the organization
;; Public is for organizations visible to everyone
DEFAULT_ORG_VISIBILITY            = private
;; Default value for DefaultOrgMemberVisible
;; True will make the membership of the users visible when added to the organisation
DEFAULT_ORG_MEMBER_VISIBLE        = true
;; Only users with write permissions can track time if this is true
DEFAULT_ALLOW_ONLY_CONTRIBUTORS_TO_TRACK_TIME = true

[repository]
;; Default privacy setting when creating a new repository, allowed values: last, private, public. Default is last which means the last setting used.
DEFAULT_PRIVATE = private
;; Default private when using push-to-create
DEFAULT_PUSH_CREATE_PRIVATE = true

[repository.local]
LOCAL_COPY_PATH = /data/gitea/tmp/local-repo

[repository.upload]
TEMP_PATH = /data/gitea/uploads

[indexer]
ISSUE_INDEXER_PATH = /data/gitea/indexers/issues.bleve

[admin]
;; Disallow regular (non-admin) users from creating organizations.
DISABLE_REGULAR_ORG_CREATION = true

[openid]
ENABLE_OPENID_SIGNIN = false
ENABLE_OPENID_SIGNUP = true
;; Allowed URI patterns (POSIX regexp).
;; Space separated.
;; Only these would be allowed if non-blank.
;; Example value: trusted.domain.org trusted.domain.net
WHITELISTED_URIS = services.test

[oauth2_client]
;; Whether a new auto registered oauth2 user needs to confirm their email.
REGISTER_EMAIL_CONFIRM = false
;; Automatically create user accounts for new oauth2 users.
ENABLE_AUTO_REGISTRATION = true

[webhook]
;; Webhook can only call allowed hosts for security reasons. Comma separated list, eg: external, 192.168.1.0/24, *.mydomain.com
;; Built-in: loopback (for localhost), private (for LAN/intranet), external (for public hosts on internet), * (for all hosts)
;; CIDR list: 1.2.3.0/8, 2001:db8::/32
;; Wildcard hosts: *.mydomain.com, 192.168.100.*
;; Since 1.15.7. Default to * for 1.15.x, external for 1.16 and later
ALLOWED_HOST_LIST = 172.16.11.0/24
;;
;; Allow insecure certification
SKIP_TLS_VERIFY = false

[mailer]
ENABLED = false
;; Prefix displayed before subject in mail
SUBJECT_PREFIX = [CICD-toolbox message]
;; Mail server
;; Gmail: smtp.gmail.com:587
;; QQ: smtp.qq.com:465
;; As per RFC 8314 using Implicit TLS/SMTPS on port 465 (if supported) is recommended,
;; otherwise STARTTLS on port 587 should be used.
;HOST =
;; Use client certificate
;USE_CERTIFICATE = true
;CERT_FILE = /data/gitea/mailer/cert.pem
;KEY_FILE = /data/gitea/mailer/key.pem
;; Should SMTP connect with TLS, (if port ends with 465 TLS will always be used.)
;; If this is false but STARTTLS is supported the connection will be upgraded to TLS opportunistically.
;IS_TLS_ENABLED = true
;; Mail from address, RFC 5322. This can be just an email address, or the `"Name" <email@example.com>` format
;FROM = CICD-toolbox@provider.test
;; Mailer user name and password
;; Please Note: Authentication is only supported when the SMTP server communication is encrypted with TLS (this can be via STARTTLS) or `HOST=localhost`.
;USER =
;; Use PASSWD = `your password` for quoting if you use special characters in the password.
;PASSWD =

[session]
PROVIDER_CONFIG = /data/gitea/sessions
PROVIDER        = file

[picture]
AVATAR_UPLOAD_PATH            = /data/gitea/avatars
REPOSITORY_AVATAR_UPLOAD_PATH = /data/gitea/repo-avatars
DISABLE_GRAVATAR              = true

[attachment]
PATH = /data/gitea/attachments


